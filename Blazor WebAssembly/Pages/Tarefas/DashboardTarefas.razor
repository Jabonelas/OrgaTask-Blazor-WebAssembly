@page "/dashboard-tarefas"
@using Blazor_WebAssembly.ViewModel.Tarefa
@inject DashboardTarefasViewModel DashboardTarefasViewModel

<PageTitle>Dashboard de Tarefas</PageTitle>

<h1 class="main-title">Dashboard de Tarefas</h1>

<!-- Cards de Status -->
<div class="dashboard-container">
    <div class="status-grid">

        <!-- Card Pendentes -->
        <div class="status-card pending" @onclick="@(() => DashboardTarefasViewModel.TarefasPendentes("Pendente"))">
            <div class="card-icon">
                <i class="fas fa-clock"></i>
            </div>
            <div class="card-content" style="color: #000; display: flex; flex-direction: column; align-items: center;" >
                <h3>Pendentes</h3>
                <div class="count">@DashboardTarefasViewModel.pendenteCount</div>
                <div class="card-footer">Atualizado agora</div>
            </div>
        </div>

        <!-- Card Em Progresso -->
        <div class="status-card in-progress" @onclick="@(() => DashboardTarefasViewModel.TarefasPendentes("Em Progresso"))">
            <div class="card-icon">
                <i class="fas fa-tasks"></i>
            </div>
            <div class="card-content" style="color: #000; display: flex; flex-direction: column; align-items: center;">
                <h3>Em Progresso</h3>
                <div class="count">@DashboardTarefasViewModel.emProgressoCount</div>
                <div class="card-footer">Atualizado agora</div>
            </div>
        </div>

        <!-- Card Concluídas -->
        <div class="status-card completed" @onclick="@(() => DashboardTarefasViewModel.TarefasPendentes("Concluído"))">
            <div class="card-icon">
                <i class="fas fa-check-circle"></i>
            </div>
            <div class="card-content" style="color: #000; display: flex; flex-direction: column; align-items: center;">
                <h3>Concluídas</h3>
                <div class="count">@DashboardTarefasViewModel.concluidoCount</div>
                <div class="card-footer">Atualizado agora</div>
            </div>
        </div>
    </div>


    <!-- Progresso Total -->
    <div class="progress-section">
        <div class="section-header">
            <h2><i class="fas fa-chart-line"></i> Progresso Total</h2>
        </div>

        <div class="progress-container">
            <div class="progress-labels">
                <span>Progresso</span>
                <span>@DashboardTarefasViewModel.porcentagemTarefasConcluidas%</span>
            </div>
            <div class="progress-bar">
                <div class="progress-fill" style="width: @DashboardTarefasViewModel.porcentagemTarefasConcluidas%"></div>
            </div>
            <div class="progress-description">
                <i class="fas fa-info-circle"></i> Você completou @DashboardTarefasViewModel.porcentagemTarefasConcluidas% das tarefas cadastradas
            </div>
        </div>
    </div>

    <!-- Tarefas Prioritárias -->
    <div class="priority-section">
        <div class="section-header">
            <h2><i class="fas fa-exclamation-triangle"></i> Tarefas Prioritárias</h2>
            <span class="badge">@DashboardTarefasViewModel.listaTarefasPrioridadeAlta.Count itens</span>
        </div>

        <div class="priority-list">
            @foreach (var item in DashboardTarefasViewModel.listaTarefasPrioridadeAlta)
            {
                <div class="priority-item">
                    <div class="task-info">
                        <span class="task-title">@item.Titulo</span>
                        <span class="task-status @item.Status.ToLower()">@item.Status</span>
                    </div>
                    <div class="task-meta">
                        <span class="task-date"><i class="far fa-calendar-alt"></i>Criado: @item.Data</span>
                        <span class="task-deadline"><i class="far fa-clock"></i> @item.DescricaoPrazo </span>
                    </div>
                </div>
            }
        </div>
    </div>


</div>


@code {

    protected override async Task OnInitializedAsync()
    {
       await DashboardTarefasViewModel.CarregarInformacoes();
    }
}
